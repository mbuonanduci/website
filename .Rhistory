pnorm(10.8, mean = 10.2, sd = 0.8)
qnorm(0.25, 0, 1)
pnorm(10.8, mean=10.2, sd=0.8) - pnorm(8.7, mean=10.2, sd=0.8)
23639/60
23639/60/60
?t.test
install.packages("INLA",repos=c(getOption("repos"),INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
willow <- c(57.848, 56.085, 54.176, 54.555, 55.366, 55.602, 55.903, 56.582, 57.355, 54.426, 55.850, 56.590, 53.640, 55.385, 56.131, 55.359, 55.739, 55.155, 55.334, 56.428, 55.703, 56.497, 56.035, 56.660, 53.008, 54.214, 55.200, 54.270, 55.966, 58.103)
poplar <- c(54.604, 54.533, 54.931, 53.846, 54.612, 54.427, 56.033, 53.895, 55.748, 54.476, 55.886, 54.378, 54.404, 56.039, 54.320, 54.963, 57.266, 56.168, 55.215, 56.926, 53.510, 53.945, 55.305, 53.184, 55.091, 54.288, 56.442, 56.052, 54.507, 55.314)
var.test(willow, poplar)
var.test(poplar, willow)
var(willow)
var(poplar)
var.test(willow, poplar, alternative = "greater")
1-pf(1.3357, 29, 29)
nonwhite <- c(55, 101, 65, 104, 82, 110, 93, 91, 65, 57, 110, 70, 119, 112, 93, 107, 90, 91, 86, 103, 73, 58, 55, 77, 97, 74, 83, 107, 77)
white <- c(90, 99, 72, 60, 84, 53, 72, 49, 100, 47, 61, 58, 80, 75, 76, 65, 91, 54, 95, 93, 68, 13, 80, 82, 47, 88, 71, 67, 56, 82, 73, 117, 47, 117, 58, 71)
var.test(white, nonwhite)
var.test(nonwhite, white)
nonwhite <- c(123, 56, 82, 104, 104, 98, 71, 72, 82, 87, 107, 85, 74, 67, 87, 92, 109, 117, 99, 110, 90, 46, 107, 105, 76, 109, 101, 97, 102, 85, 69, 82, 99, 112)
white <- c(71, 90, 66, 78, 74, 71, 91, 83, 87, 79, 96, 35, 81, 90, 88, 50, 70, 92, 62, 99, 52, 79, 76, 24, 33, 89, 96, 70, 46)
var.test(white, nonwhite)
var.test(nonwhite, white)
one <- rnorm(20, 0, 3)
two <- rnorm(20, 0, 3)
var.test(one, two)
var.test(two, one)
one <- rnorm(200, 0, 3)
var.test(one, two)
var.test(two, one)
one <- rnorm(200, 0, 15)
var.test(one, two)
var.test(two, one)
test <- data.frame("column" = c(1:10), "col2" = c(rep(1, 9), NA))
test <- data.frame("column" = c(1:10), "col2" = c(rep(1, 9), NA),
"col3" = c(NA, NA, rep(1,8)))
View(test)
require(tidyverse)
test2 <- replace_na(test, 0)
test2 <- replace_na(test, list(0))
View(test2)
?list
list(0, length=2)
as.list(c(0,0))
data <- test
data <- replace_na(data, as.list(rep(0, ncol(data))) )
View(data)
replace_na()
?replace_na
list(colnames(data) = 0)
data[is.na(data)] <- 0
View(data)
install.packages("RcppParallel")
library(devtools)
devtools::install_github("nwfsc-timeseries/atsalibrary")
library(devtools)
devtools::install_github("nwfsc-timeseries/atsalibrary")
install.packages("tibble")
install.package("svglite")
install.packages("svglite")
devtools::install_github("nwfsc-timeseries/atsalibrary")
devtools::install_github("nwfsc-timeseries/atsalibrary")
devtools::install_github("nwfsc-timeseries/atsalibrary")
install.packages("gdtools")
devtools::install_github("nwfsc-timeseries/atsalibrary")
install.packages("svglite")
load("~/Downloads/sockeye.RData")
knitr::opts_chunk$set(echo = FALSE, warning=FALSE,
message=FALSE, results='hide',
fig.align = 'center')
dat <- sockeye %>% subset(region=="WOOD" & brood_year>=1960)
library(ggplot2)
#library(atsalibrary)
library(dplyr)
library(forecast)
library(rEDM)
dat <- sockeye %>% subset(region=="WOOD" & brood_year>=1960)
tdat <- subset(dat, brood_year<=2000)$spawners
n <- length(tdat)
plot(tdat[2:n], tdat[1:(n-1)], xlab="t (forecast)", ylab="t-1 (observation)")
View(sockeye)
sockeye$spawners
sockeye$spawners[sockeye$brood_year==2000]
View(dat)
#1992 and 1987
# so forecast using 1993 and 1988?
dat$spawners[dat$brood_year==1993]
#1992 and 1987
# so forecast using 1993 and 1988?
mean(dat$spawners[dat$brood_year==1993], dat$spawners[dat$brood_year==1988])
View(sockeye)
dat <- sockeye %>% subset((region=="TOGIAK" | region=="EGEGIK") & brood_year>=1960)
dat <- sockeye %>% subset(region=="TOGIAK" & brood_year>=1960)
sort(abs(x-tdat), return.idx=TRUE)
sort(abs(dat-tdat), return.idx=TRUE)
sort(abs(dat$spawners[dat$brood_year==2000]-tdat), return.idx=TRUE)
dat <- sockeye %>% subset(region=="TOGIAK" & brood_year>=1960)
tdat <- subset(dat, brood_year<=2000)$spawners
n <- length(tdat)
plot(tdat[2:n], tdat[1:(n-1)], xlab="t (forecast)", ylab="t-1 (observation)")
x <- dat$spawners[dat$brood_year==2000]
sort(abs(x-tdat), return.idx=TRUE)
abs(x-tdat)
sort(abs(x-tdat), return.idx=TRUE)
sort(abs(x-tdat))
sort(abs(x-tdat), return.idx=TRUE)
sort(abs(x-tdat), return.id=TRUE)
x <- dat$spawners[dat$brood_year==2000]
a <- sort(abs(x-tdat), index.return=TRUE)
View(a)
View(sockeye)
table(sockeye$region)
mod = rEDM::simplex(as.numeric(tdat), E=1:10)
View(mod)
mod = rEDM::simplex(as.numeric(tdat), E=1:10)
plot(x = mod$E, y = mod$rho)
mod = rEDM::simplex(as.numeric(tdat), E=1:10)
plot(x = mod$E, y = mod$rho)
abline(h=0)
ggplot(mod, aes(E,unlist(rho))) +
geom_line() + theme_bw() + geom_point() +
xlab("E") + ylab("rho = cor(obs,pred)")
ggplot(mod, aes(E,unlist(rmse))) +
geom_line() + theme_bw() + geom_point() +
xlab("E") + ylab("RMSE")
knitr::opts_chunk$set(echo = FALSE, warning=FALSE,
message=FALSE, results='hide',
fig.align = 'center')
library(ggplot2)
#library(atsalibrary)
library(dplyr)
library(forecast)
library(rEDM)
#data(sockeye, package="atsalibrary")
ggplot(sockeye, aes(x=brood_year, y=spawners, col=region)) + geom_line()
dat <- sockeye %>% subset(region=="TOGIAK" & brood_year>=1960)
dat2 <- sockeye %>% subset(region=="EGEGIK" & brood_year>=1960)
tdat <- subset(dat, brood_year<=2000)$spawners
tdat2 <- subset(dat2, brood_year<=2000)$spawners
n <- length(tdat)
plot(tdat[2:n], tdat[1:(n-1)], xlab="t (forecast)", ylab="t-1 (observation)")
mod = rEDM::simplex(as.numeric(tdat), E=1:10)
mod2  = rEDM::simplex(as.numeric(tdat2), E=1:10)
ggplot(mod, aes(E,unlist(rho))) +
geom_line() + theme_bw() + geom_point() +
xlab("E") + ylab("rho = cor(obs,pred)")
ggplot(mod2, aes(E,unlist(rho))) +
geom_line() + theme_bw() + geom_point() +
xlab("E") + ylab("rho = cor(obs,pred)")
ggplot(mod, aes(E,unlist(rmse))) +
geom_line() + theme_bw() + geom_point() +
xlab("E") + ylab("RMSE")
ggplot(mod2, aes(E,unlist(rmse))) +
geom_line() + theme_bw() + geom_point() +
xlab("E") + ylab("RMSE")
View(dat)
mod = rEDM::simplex(tdat,
E=3, stats_only=FALSE,
lib=c(1,31), pred=c(32,46))
mod = rEDM::simplex(as.numeric(tdat),
E=3, stats_only=FALSE,
lib=c(1,31), pred=c(32,46))
mod = rEDM::simplex(as.numeric(dat$spawners),
E=3, stats_only=FALSE,
lib=c(1,31), pred=c(32,46))
mod = rEDM::simplex(as.numeric(dat$spawners),
E=3, stats_only=FALSE,
lib=c(1,31), pred=c(32,46))
mod2 = rEDM::simplex(as.numeric(dat2$spawners),
E=2, stats_only=FALSE,
lib=c(1,31), pred=c(32,46))
mod = rEDM::simplex(as.numeric(dat$spawners),
E=3, stats_only=FALSE,
lib=c(1,31), pred=c(32,46))
summary(mod)
mod2 = rEDM::simplex(as.numeric(dat2$spawners),
E=2, stats_only=FALSE,
lib=c(1,31), pred=c(32,46))
mod = rEDM::simplex(as.numeric(dat$spawners),
E=3, stats_only=FALSE,
lib=c(1,31), pred=c(32,46))
mod$model_output$E3
mod2 = rEDM::simplex(as.numeric(dat2$spawners),
E=2, stats_only=FALSE,
lib=c(1,31), pred=c(32,46))
mod = rEDM::simplex(as.numeric(dat$spawners),
E=3, stats_only=FALSE,
lib=c(1,31), pred=c(32,46))
mod$model_output$E3
mod2 = rEDM::simplex(as.numeric(dat2$spawners),
E=2, stats_only=FALSE,
lib=c(1,31), pred=c(32,46))
mod2$model_output$E2
mod = rEDM::simplex(as.numeric(dat$spawners),
E=3, stats_only=FALSE,
lib=c(1,31), pred=c(32,46))
plot(mod$model_output$E3$Index, mod$model_output$E3$Predictions)
mod2 = rEDM::simplex(as.numeric(dat2$spawners),
E=2, stats_only=FALSE,
lib=c(1,31), pred=c(32,46))
mod2$model_output$E2
mod = rEDM::simplex(as.numeric(dat$spawners),
E=3, stats_only=FALSE,
lib=c(1,31), pred=c(32,46))
plot(mod$model_output$E3$Index, mod$model_output$E3$Predictions, type = "l")
mod2 = rEDM::simplex(as.numeric(dat2$spawners),
E=2, stats_only=FALSE,
lib=c(1,31), pred=c(32,46))
mod2$model_output$E2
mod = rEDM::simplex(as.numeric(dat$spawners),
E=3, stats_only=FALSE,
lib=c(1,31), pred=c(32,46))
plot(mod$model_output$E3$Index, mod$model_output$E3$Predictions, type = "l")
points(mod$model_output$E3$Index, mod$model_output$E3$Observations)
mod2 = rEDM::simplex(as.numeric(dat2$spawners),
E=2, stats_only=FALSE,
lib=c(1,31), pred=c(32,46))
mod2$model_output$E2
mod = rEDM::simplex(as.numeric(dat$spawners),
E=3, stats_only=FALSE,
lib=c(1,31), pred=c(32,46))
plot(mod$model_output$E3$Index, mod$model_output$E3$Predictions, type = "l")
points(mod$model_output$E3$Index, mod$model_output$E3$Observations)
mod2 = rEDM::simplex(as.numeric(dat2$spawners),
E=2, stats_only=FALSE,
lib=c(1,31), pred=c(32,46))
plot(mod2$model_output$E2$Index, mod2$model_output$E2$Predictions, type = "l")
points(mod2$model_output$E2$Index, mod2$model_output$E2$Observations)
mod = rEDM::simplex(as.numeric(dat$spawners),
E=3, stats_only=FALSE,
lib=c(1,31), pred=c(32,46))
plot(mod$model_output$E3$Index, mod$model_output$E3$Predictions, type = "l", main="T river")
points(mod$model_output$E3$Index, mod$model_output$E3$Observations)
mod2 = rEDM::simplex(as.numeric(dat2$spawners),
E=2, stats_only=FALSE,
lib=c(1,31), pred=c(32,46))
plot(mod2$model_output$E2$Index, mod2$model_output$E2$Predictions, type = "l", main="E river")
points(mod2$model_output$E2$Index, mod2$model_output$E2$Observations)
mod = rEDM::simplex(as.numeric(dat$spawners),
E=3, stats_only=FALSE,
lib=c(1,31), pred=c(32,46))
plot(mod$model_output$E3$Index, mod$model_output$E3$Predictions, type = "l",
main="T river", xlab="time", ylab="spawners")
points(mod$model_output$E3$Index, mod$model_output$E3$Observations)
mod2 = rEDM::simplex(as.numeric(dat2$spawners),
E=2, stats_only=FALSE,
lib=c(1,31), pred=c(32,46))
plot(mod2$model_output$E2$Index, mod2$model_output$E2$Predictions, type = "l",
main="E river",  xlab="time", ylab="spawners")
points(mod2$model_output$E2$Index, mod2$model_output$E2$Observations)
mod$model_output
library(readr)
barley <- read_csv("Desktop/barley.csv")
View(barley)
lm(formula = barley$yield~ barley$rainfall)
summary(lm(formula = barley$yield~ barley$rainfall))
summary(lm(formula = barley$yield~ barley$temp))
data("longley")
cor.test(longley$Population, longley$Employed)
mod1 <- lm(GNP ~ Employed, data = longley)
summary(mod1)
mod2 <- lm(GNP ~ Employed+Unemployed, data=longley)
summary(mod2)
mod3 <- lm(GNP ~ Employed+Population)
mod3 <- lm(GNP ~ Employed+Population, data=longley)
summary(mod3)
# Fit linear regression
reg <- lm(life~year)
summary(reg)
# Create data objects
year <- c(1930, 1940, 1950, 1965, 1973, 1982, 1987, 1992, 2010)
life <- c(59.7, 62.9, 70.2, 69.7, 71.4, 74.5, 75, 75.7, 78.7)
# Fit linear regression
reg <- lm(life~year)
summary(reg)
# Question 2
-377.24310 + 0.22748*1998
# Question 2
-377.24310 + 0.22748*1998
# Question 3
(68 + 377.24310)/0.22748
# Question 6
-377.24310 + 0.22748*2030
labs <- 75
assessments <- 75
exam1 <- 58
exam2 <- 90
mean(labs, assessments, exam1, exam2)
labs <- 80
assessments <- 75
exam1 <- 58
exam2 <- 90
mean(labs, assessments, exam1, exam2)
76*.15
76-11.4-2-4-6-6
# Import data
data("longley")
# Preview data
head(longley)
# Plot function
plot(longley, col="blue")
# Correlation analysis
cor.test(longley$GNP, longley$Employed)
mod1 <- lm(GNP ~ Employed, data = longley)
summary(mod1)
# Linear model using Employed and Population
mod2 <- lm(GNP ~ Employed + Population, data = longley)
summary(mod2)
mod3 <- lm(GNP ~ Employed + Population + Unemployed, data = longley)
summary(mod3)
summary(mod2)
# Check model residuals
my.residuals <- residuals(mod2)
# Histogram
hist(my.residuals)
# Histogram
hist(my.residuals,
xlab = "Residuals", main = "Histogram of residuals",
col = "lightblue")
# Q-Q plot
qqnorm(my.residuals, main = "Q-Q plot of residuals",
col = "blue")
qqline(my.residuals)
summary(mod3)
library(readr)
treesoil <- read_csv("Desktop/qsci381lab9/treesoil.csv")
View(treesoil)
table(treesoil$Tree)
expected <- c(0.1, 0.5, 0.05, 0.25, 0.1)
observed <- table(treesoil$Tree)
chisq.test(observed, p = expected)
?chisq.test
table(treesoil)
treesoiltabl <- table(treesoil)
mosaicplot(treesoiltabl)
?mosaicplot
chisq.test(treesoil$Tree, treesoil$Soil)
mosaicplot(treesoiltabl, col=c("blue", "red"))
mosaicplot(treesoiltabl, col=c("blue", "red", "yellow"))
mosaicplot(treesoiltabl, col=c("blue", "red", "yellow", "green"))
5*(-0.10969) +1.95723
(13.25-14.58)/-.84
(11.75-14.58)/-.84
x <- 14.05-0.41*29.52
exp(x)/(1-exp(x))
exp(x)/(1+exp(x))
exp(x)/(1+exp(x))
exp(1.947)/(1+exp(1.947))
exp(1.95)/(1+exp(1.95))
14.05-0.41*29.52
exp(1.9468)/(1+exp(1.9468))
exp(1.947)/(1+exp(1.947))
exp(1.95)/(1+exp(1.95))
14.05-0.41*19.46
14.05-0.41*19.45
exp(6.0755)/(1+exp(6.0755))
exp(6.076)/(1+exp(6.076))
exp(6.08)/(1+exp(6.08))
sqrt(.48)
sqrt(.38)
without <- c(4.07, 3.94, 3.92, 3.97, 3.92, 3.96, 4.07, 3.93, 3.99, 4.02)
with <- c(3.93, 3.87, 3.85, 3.92, 3.90, 3.85, 3.92, 3.80, 3.89, 3.89)
t.test(with, without, alternative = "less", paired = TRUE)
t.test(with, without, alternative = "less", paired = TRUE)
plot(with, without)
abline(a=0, b=1)
t.test(with, without, alternative = "greater", paired = TRUE)
bulbs <- c(1094.16, 1048.60, 1025.73, 1048.94, 1064.20, 956.01, 989.97, 1127.48, 1063.19, 1042.07, 992.30, 1033.02, 1020.79, 1178.47, 1066.03, 991.36, 1009.94, 1108.06, 1007.89, 1062.37, 1035.88, 967.89, 1035.56, 1049.32, 953.21)
t.test(bulbs, 050)
t.test(bulbs, mu=1050)
untreated <- c(14.6, 13.8, 16.2, 23.4, 23.2, 20.8, 14.3, 18.4, 9.8, 13.7, 12.7, 13.6, 23.5, 22.0, 18.4, 20.1, 21.0, 21.0, 20.2, 22.3, 23.3, 18.5)
treated <- c(24.7, 20.7, 27.0, 18.5, 25.8, 28.2, 27.7, 24.2, 27.8, 31.1, 24.0, 21.2, 24.9, 21.5, 27.2, 32.1, 24.1, 19.4)
var.test(untreated, treated)
t.test(untreated, treated, var.equal = TRUE)
t.test(untreated, treated, var.equal = FALSE)
12.93 + 7.57*1.6 + 3.89*22
12.93 + 7.57*1.6 + 3.89*22 -0.27*5.5
(185-12.93 - 3.89*30) / (7.57)
(185-12.93 - 3.89*30 +0.27*19) / (7.57)
c(1, 2, 3)
1 -c(1, 2, 3)
1 -c(1, 2, NA)
chisq.test(c(44,109,272,57,18), p=c(.1,.16,.55,.11,.08))
chisq.test(c(66,119,340,60,15), p=c(.1,.16,.55,.11,.08))
?pgeom
dgeom(10, prob=0.0128)
1 - pbinom(2, size=12, prob=0.44)
dpos(6, 4)
dpois(6, 4)
data("OrchardSprays")
attach(OrchardSprays)
anovatest <- aov(decrease~treatment)
summary(anovatest)
TukeyHSD(anovatest)
quantile(c(35.6, 45.0, 38.7, 43.8, 39.2, 39.1, 41.8, 33.7, 39.5, 37.5, 43.8, 36.2, 43.7, 33.0, 47.2, 40.0, 39.5, 36.5, 40.9, 50.1, 39.7, 40.5, 35.2))
42.75-37
var(c(10.0, 18.2, 22.6, 15.1, 13.6, 15.5, 12.5, 18.5, 17.2, 19.3, 20.8))
library(readr)
treesoil <- read_csv("Desktop/treesoil.csv")
View(treesoil)
table(treesoil)
table(treesoil$Tree, treesoil$Soil)
table(treesoil$Soil, treesoil$Tree)
t1 <- table(treesoil$Tree, treesoil$Soil)
t2 <- table(treesoil$Soil, treesoil$Tree)
mosaicplot(t1)
mosaicplot(t2)
data(swiss)
attach(swiss)
head(swiss)
mod <- lm(Fertility ~ Agriculture + Examination + Education + Catholic + Infant.Mortality)
summary(mod)
mod <- lm(Fertility ~ Agriculture + Examination + Education + Infant.Mortality)
summary(mod)
68.77314 + 1.30710 *17.8 + -0.12929 *62.5 + -0.68799 *9.3 + -0.61965 *28.4
mod <- lm(Fertility ~  Examination + Education + Infant.Mortality)
summary(mod)
55.2747 + 1.4556*17.8 + -0.5109*9.3 + -0.5225*28.4
mod <- lm(Fertility ~   Education + Infant.Mortality)
summary(mod)
exp(1.9648) / (1 + exp(1.9648))
14.05 - (0.41*29.52)
exp(1.9468) / (1 + exp(1.9468))
1 - (dbinom(0, size=12, prob=0.44) + dbinom(1, size=12, prob=0.44) + dbinom(2, size=12, prob=0.44) + dbinom(3, size=12, prob=0.44))
1 - ( dbinom(0, size=12, prob=0.44) + dbinom(1, size=12, prob=0.44) + dbinom(2, size=12, prob=0.44) )
untreated <- c(14.6, 13.8, 16.2, 23.4, 23.2, 20.8, 14.3, 18.4, 9.8, 13.7, 12.7, 13.6, 23.5, 22.0, 18.4, 20.1, 21.0, 21.0, 20.2, 22.3, 23.3, 18.5)
treated <- c(24.7, 20.7, 27.0, 18.5, 25.8, 28.2, 27.7, 24.2, 27.8, 31.1, 24.0, 21.2, 24.9, 21.5, 27.2, 32.1, 24.1, 19.4)
var.test(untreated, treated)
t.test(treated, untreated, alternative = "greater", var.equal = TRUE)
1100*25
1100*2.5
950+950+1600
1850/2
1750/2
3500/4
sample(c(1:17), 1)
sample(c(1:17), 1)
sample(c(1:4), 1)
sample(c(1:22), 1)
sample(c(1:22), 1)
sample(c(1:22), 1)
sample(c(1:8), 1)
sample(c(1:8), 1)
sample(c(1:3), 1)
sample(c(1:7,9:11), 1)
sample(c(1:7), 1)
8500*1.1
citation()
setwd("~/Documents/website")
require(blogdown)
serve_site()
build_site()
require(blogdown)
serve_site()
serve_site()
stop_server()
serve_site()
build_site()
require(blogdown)
serve_site()
build_site()
require(blogdown)
serve_site()
build_site()
getwd()
require(blogdown)
serve_site()
build_site()
stop_server()
require(blogdown)
serve_site()
build_site()
stop_server()
require(blogdown)
install.packages("blogdown")
library(blogdown)
blogdown::serve_site()
install.packages("blogdown")
require(blogdown)
serve_site()
serve_site()
build_site()
install.packages("blogdown")
require(blogdown)
build_site()
require(blogdown)
serve_site()
build_site()
require(blogdown)
serve_site()
build_site()
require(blogdown)
serve_site()
build_site()
library(blogdown)
build_site()
library(blogdown)
serve_site
serve_site()
build_site()
library(blogdown)
serve_site()
build_site()
library(blogdown)
serve_site()
build_site()
library(blogdown)
serve_site()
build_site()
require(blogdown)
serve_site()
build_site()
